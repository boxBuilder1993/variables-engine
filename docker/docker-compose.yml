services:
  db:
    image: postgres:15-alpine
    container_name: variables_engine_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-variables_engine}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - variables_engine_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway
    container_name: variables_engine_migrations
    volumes:
      - ../migrations:/flyway/sql
    environment:
      - FLYWAY_URL=jdbc:postgresql://db:5432/${POSTGRES_DB:-variables_engine}
      - FLYWAY_USER=${POSTGRES_USER:-postgres}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - FLYWAY_CONNECT_RETRIES=10
      - FLYWAY_SCHEMAS=public
      - FLYWAY_GROUP=true
    command: migrate
    depends_on:
      db:
        condition: service_healthy
    networks:
      - variables_engine_network

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: variables-engine-app
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db/variables_engine
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    volumes:
      - ..:/app
    depends_on:
      - flyway
    networks:
      - variables_engine_network

  adminer:
    image: adminer:latest
    container_name: variables_engine_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: nette
    depends_on:
      - db
    networks:
      - variables_engine_network

networks:
  variables_engine_network:
    driver: bridge

volumes:
  postgres_data: